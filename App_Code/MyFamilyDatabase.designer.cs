#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MyFamilyDatabase")]
public partial class MyFamilyDatabaseDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertOccupation(Occupation instance);
  partial void UpdateOccupation(Occupation instance);
  partial void DeleteOccupation(Occupation instance);
  partial void InsertPersonInfo(PersonInfo instance);
  partial void UpdatePersonInfo(PersonInfo instance);
  partial void DeletePersonInfo(PersonInfo instance);
  #endregion
	
	public MyFamilyDatabaseDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MyFamilyDatabaseConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public MyFamilyDatabaseDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public MyFamilyDatabaseDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public MyFamilyDatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public MyFamilyDatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Occupation> Occupations
	{
		get
		{
			return this.GetTable<Occupation>();
		}
	}
	
	public System.Data.Linq.Table<PersonInfo> PersonInfos
	{
		get
		{
			return this.GetTable<PersonInfo>();
		}
	}
	
	public System.Data.Linq.Table<Business> Businesses
	{
		get
		{
			return this.GetTable<Business>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Occupation")]
public partial class Occupation : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private short _OccupationID;
	
	private string _OccupationDesc;
	
	private EntitySet<PersonInfo> _PersonInfos;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOccupationIDChanging(short value);
    partial void OnOccupationIDChanged();
    partial void OnOccupationDescChanging(string value);
    partial void OnOccupationDescChanged();
    #endregion
	
	public Occupation()
	{
		this._PersonInfos = new EntitySet<PersonInfo>(new Action<PersonInfo>(this.attach_PersonInfos), new Action<PersonInfo>(this.detach_PersonInfos));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OccupationID", AutoSync=AutoSync.OnInsert, DbType="Smallint NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public short OccupationID
	{
		get
		{
			return this._OccupationID;
		}
		set
		{
			if ((this._OccupationID != value))
			{
				this.OnOccupationIDChanging(value);
				this.SendPropertyChanging();
				this._OccupationID = value;
				this.SendPropertyChanged("OccupationID");
				this.OnOccupationIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OccupationDesc", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string OccupationDesc
	{
		get
		{
			return this._OccupationDesc;
		}
		set
		{
			if ((this._OccupationDesc != value))
			{
				this.OnOccupationDescChanging(value);
				this.SendPropertyChanging();
				this._OccupationDesc = value;
				this.SendPropertyChanged("OccupationDesc");
				this.OnOccupationDescChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Occupation_PersonInfo", Storage="_PersonInfos", ThisKey="OccupationID", OtherKey="OccupationID")]
	public EntitySet<PersonInfo> PersonInfos
	{
		get
		{
			return this._PersonInfos;
		}
		set
		{
			this._PersonInfos.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_PersonInfos(PersonInfo entity)
	{
		this.SendPropertyChanging();
		entity.Occupation = this;
	}
	
	private void detach_PersonInfos(PersonInfo entity)
	{
		this.SendPropertyChanging();
		entity.Occupation = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PersonInfo")]
public partial class PersonInfo : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _PersonID;
	
	private string _FirstName;
	
	private string _MiddleName;
	
	private string _LastName;
	
	private string _Gender;
	
	private System.Nullable<short> _OccupationID;
	
	private string _Contact;
	
	private System.Nullable<System.DateTime> _DOB;
	
	private string _PlaceOfBirth;
	
	private string _PrimaryEmail;
	
	private string _SecondaryEmail;
	
	private string _AboutMe;
	
	private System.Nullable<int> _SpouseID;
	
	private System.Nullable<int> _FatherID;
	
	private string _UserName;
	
	private string _Password;
	
	private System.Nullable<int> _ShowDOB;
	
	private System.Nullable<int> _ManagedBy;
	
	private string _FullName;
	
	private EntitySet<PersonInfo> _Children;
	
	private EntityRef<PersonInfo> _Father;
	
	private EntityRef<Occupation> _Occupation;
	
	private EntityRef<PersonInfo> _Spouse;
	
	private EntityRef<PersonInfo> _PersonInfo1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonIDChanging(int value);
    partial void OnPersonIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnOccupationIDChanging(System.Nullable<short> value);
    partial void OnOccupationIDChanged();
    partial void OnContactChanging(string value);
    partial void OnContactChanged();
    partial void OnDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnDOBChanged();
    partial void OnPlaceOfBirthChanging(string value);
    partial void OnPlaceOfBirthChanged();
    partial void OnPrimaryEmailChanging(string value);
    partial void OnPrimaryEmailChanged();
    partial void OnSecondaryEmailChanging(string value);
    partial void OnSecondaryEmailChanged();
    partial void OnAboutMeChanging(string value);
    partial void OnAboutMeChanged();
    partial void OnSpouseIDChanging(System.Nullable<int> value);
    partial void OnSpouseIDChanged();
    partial void OnFatherIDChanging(System.Nullable<int> value);
    partial void OnFatherIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnShowDOBChanging(System.Nullable<int> value);
    partial void OnShowDOBChanged();
    partial void OnManagedByChanging(System.Nullable<int> value);
    partial void OnManagedByChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    #endregion
	
	public PersonInfo()
	{
		this._Children = new EntitySet<PersonInfo>(new Action<PersonInfo>(this.attach_Children), new Action<PersonInfo>(this.detach_Children));
		this._Father = default(EntityRef<PersonInfo>);
		this._Occupation = default(EntityRef<Occupation>);
		this._Spouse = default(EntityRef<PersonInfo>);
		this._PersonInfo1 = default(EntityRef<PersonInfo>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int PersonID
	{
		get
		{
			return this._PersonID;
		}
		set
		{
			if ((this._PersonID != value))
			{
				this.OnPersonIDChanging(value);
				this.SendPropertyChanging();
				this._PersonID = value;
				this.SendPropertyChanged("PersonID");
				this.OnPersonIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string FirstName
	{
		get
		{
			return this._FirstName;
		}
		set
		{
			if ((this._FirstName != value))
			{
				this.OnFirstNameChanging(value);
				this.SendPropertyChanging();
				this._FirstName = value;
				this.SendPropertyChanged("FirstName");
				this.OnFirstNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="VarChar(50)")]
	public string MiddleName
	{
		get
		{
			return this._MiddleName;
		}
		set
		{
			if ((this._MiddleName != value))
			{
				this.OnMiddleNameChanging(value);
				this.SendPropertyChanging();
				this._MiddleName = value;
				this.SendPropertyChanged("MiddleName");
				this.OnMiddleNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
	public string LastName
	{
		get
		{
			return this._LastName;
		}
		set
		{
			if ((this._LastName != value))
			{
				this.OnLastNameChanging(value);
				this.SendPropertyChanging();
				this._LastName = value;
				this.SendPropertyChanged("LastName");
				this.OnLastNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string Gender
	{
		get
		{
			return this._Gender;
		}
		set
		{
			if ((this._Gender != value))
			{
				this.OnGenderChanging(value);
				this.SendPropertyChanging();
				this._Gender = value;
				this.SendPropertyChanged("Gender");
				this.OnGenderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OccupationID", DbType="smallint")]
	public System.Nullable<short> OccupationID
	{
		get
		{
			return this._OccupationID;
		}
		set
		{
			if ((this._OccupationID != value))
			{
				if (this._Occupation.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnOccupationIDChanging(value);
				this.SendPropertyChanging();
				this._OccupationID = value;
				this.SendPropertyChanged("OccupationID");
				this.OnOccupationIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact", DbType="VarChar(50)")]
	public string Contact
	{
		get
		{
			return this._Contact;
		}
		set
		{
			if ((this._Contact != value))
			{
				this.OnContactChanging(value);
				this.SendPropertyChanging();
				this._Contact = value;
				this.SendPropertyChanged("Contact");
				this.OnContactChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="Date")]
	public System.Nullable<System.DateTime> DOB
	{
		get
		{
			return this._DOB;
		}
		set
		{
			if ((this._DOB != value))
			{
				this.OnDOBChanging(value);
				this.SendPropertyChanging();
				this._DOB = value;
				this.SendPropertyChanged("DOB");
				this.OnDOBChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceOfBirth", DbType="VarChar(50)")]
	public string PlaceOfBirth
	{
		get
		{
			return this._PlaceOfBirth;
		}
		set
		{
			if ((this._PlaceOfBirth != value))
			{
				this.OnPlaceOfBirthChanging(value);
				this.SendPropertyChanging();
				this._PlaceOfBirth = value;
				this.SendPropertyChanged("PlaceOfBirth");
				this.OnPlaceOfBirthChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryEmail", DbType="VarChar(50)")]
	public string PrimaryEmail
	{
		get
		{
			return this._PrimaryEmail;
		}
		set
		{
			if ((this._PrimaryEmail != value))
			{
				this.OnPrimaryEmailChanging(value);
				this.SendPropertyChanging();
				this._PrimaryEmail = value;
				this.SendPropertyChanged("PrimaryEmail");
				this.OnPrimaryEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondaryEmail", DbType="VarChar(50)")]
	public string SecondaryEmail
	{
		get
		{
			return this._SecondaryEmail;
		}
		set
		{
			if ((this._SecondaryEmail != value))
			{
				this.OnSecondaryEmailChanging(value);
				this.SendPropertyChanging();
				this._SecondaryEmail = value;
				this.SendPropertyChanged("SecondaryEmail");
				this.OnSecondaryEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AboutMe", DbType="VarChar(MAX)")]
	public string AboutMe
	{
		get
		{
			return this._AboutMe;
		}
		set
		{
			if ((this._AboutMe != value))
			{
				this.OnAboutMeChanging(value);
				this.SendPropertyChanging();
				this._AboutMe = value;
				this.SendPropertyChanged("AboutMe");
				this.OnAboutMeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpouseID", DbType="Int")]
	public System.Nullable<int> SpouseID
	{
		get
		{
			return this._SpouseID;
		}
		set
		{
			if ((this._SpouseID != value))
			{
				if (this._Spouse.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSpouseIDChanging(value);
				this.SendPropertyChanging();
				this._SpouseID = value;
				this.SendPropertyChanged("SpouseID");
				this.OnSpouseIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherID", DbType="Int")]
	public System.Nullable<int> FatherID
	{
		get
		{
			return this._FatherID;
		}
		set
		{
			if ((this._FatherID != value))
			{
				if (this._Father.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnFatherIDChanging(value);
				this.SendPropertyChanging();
				this._FatherID = value;
				this.SendPropertyChanged("FatherID");
				this.OnFatherIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowDOB", DbType="Int")]
	public System.Nullable<int> ShowDOB
	{
		get
		{
			return this._ShowDOB;
		}
		set
		{
			if ((this._ShowDOB != value))
			{
				this.OnShowDOBChanging(value);
				this.SendPropertyChanging();
				this._ShowDOB = value;
				this.SendPropertyChanged("ShowDOB");
				this.OnShowDOBChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagedBy", DbType="Int")]
	public System.Nullable<int> ManagedBy
	{
		get
		{
			return this._ManagedBy;
		}
		set
		{
			if ((this._ManagedBy != value))
			{
				if (this._PersonInfo1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnManagedByChanging(value);
				this.SendPropertyChanging();
				this._ManagedBy = value;
				this.SendPropertyChanged("ManagedBy");
				this.OnManagedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="VARCHAR(MAX)")]
	public string FullName
	{
		get
		{
			return this._FullName;
		}
		set
		{
			if ((this._FullName != value))
			{
				this.OnFullNameChanging(value);
				this.SendPropertyChanging();
				this._FullName = value;
				this.SendPropertyChanged("FullName");
				this.OnFullNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonInfo_PersonInfo", Storage="_Children", ThisKey="PersonID", OtherKey="FatherID")]
	public EntitySet<PersonInfo> Children
	{
		get
		{
			return this._Children;
		}
		set
		{
			this._Children.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonInfo_PersonInfo", Storage="_Father", ThisKey="FatherID", OtherKey="PersonID", IsForeignKey=true)]
	public PersonInfo Father
	{
		get
		{
			return this._Father.Entity;
		}
		set
		{
			PersonInfo previousValue = this._Father.Entity;
			if (((previousValue != value) 
						|| (this._Father.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Father.Entity = null;
					previousValue.Children.Remove(this);
				}
				this._Father.Entity = value;
				if ((value != null))
				{
					value.Children.Add(this);
					this._FatherID = value.PersonID;
				}
				else
				{
					this._FatherID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Father");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Occupation_PersonInfo", Storage="_Occupation", ThisKey="OccupationID", OtherKey="OccupationID", IsForeignKey=true)]
	public Occupation Occupation
	{
		get
		{
			return this._Occupation.Entity;
		}
		set
		{
			Occupation previousValue = this._Occupation.Entity;
			if (((previousValue != value) 
						|| (this._Occupation.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Occupation.Entity = null;
					previousValue.PersonInfos.Remove(this);
				}
				this._Occupation.Entity = value;
				if ((value != null))
				{
					value.PersonInfos.Add(this);
					this._OccupationID = value.OccupationID;
				}
				else
				{
					this._OccupationID = default(Nullable<short>);
				}
				this.SendPropertyChanged("Occupation");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonInfo_PersonInfo1", Storage="_Spouse", ThisKey="SpouseID", OtherKey="PersonID", IsForeignKey=true)]
	public PersonInfo Spouse
	{
		get
		{
			return this._Spouse.Entity;
		}
		set
		{
			if ((this._Spouse.Entity != value))
			{
				this.SendPropertyChanging();
				this._Spouse.Entity = value;
				this.SendPropertyChanged("Spouse");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonInfo_PersonInfo2", Storage="_PersonInfo1", ThisKey="ManagedBy", OtherKey="PersonID", IsForeignKey=true)]
	public PersonInfo ManagedByPerson
	{
		get
		{
			return this._PersonInfo1.Entity;
		}
		set
		{
			if ((this._PersonInfo1.Entity != value))
			{
				this.SendPropertyChanging();
				this._PersonInfo1.Entity = value;
				this.SendPropertyChanged("ManagedByPerson");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Children(PersonInfo entity)
	{
		this.SendPropertyChanging();
		entity.Father = this;
	}
	
	private void detach_Children(PersonInfo entity)
	{
		this.SendPropertyChanging();
		entity.Father = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
public partial class Business
{
	
	private string _BusinessId;
	
	private string _BusinessName;
	
	private string _Address;
	
	private string _OwnerID;
	
	private string _Phone1;
	
	private string _Phone2;
	
	private string _Type;
	
	public Business()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessId", CanBeNull=false)]
	public string BusinessId
	{
		get
		{
			return this._BusinessId;
		}
		set
		{
			if ((this._BusinessId != value))
			{
				this._BusinessId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessName", CanBeNull=false)]
	public string BusinessName
	{
		get
		{
			return this._BusinessName;
		}
		set
		{
			if ((this._BusinessName != value))
			{
				this._BusinessName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", CanBeNull=false)]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this._Address = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", CanBeNull=false)]
	public string OwnerID
	{
		get
		{
			return this._OwnerID;
		}
		set
		{
			if ((this._OwnerID != value))
			{
				this._OwnerID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone1", CanBeNull=false)]
	public string Phone1
	{
		get
		{
			return this._Phone1;
		}
		set
		{
			if ((this._Phone1 != value))
			{
				this._Phone1 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone2", CanBeNull=false)]
	public string Phone2
	{
		get
		{
			return this._Phone2;
		}
		set
		{
			if ((this._Phone2 != value))
			{
				this._Phone2 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", CanBeNull=false)]
	public string Type
	{
		get
		{
			return this._Type;
		}
		set
		{
			if ((this._Type != value))
			{
				this._Type = value;
			}
		}
	}
}
#pragma warning restore 1591
